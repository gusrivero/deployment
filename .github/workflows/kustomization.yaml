name: Kustomization
on:
  repository_dispatch:
    types: [kustomization]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.DODOCO_BOT_PAT }}
          path: ./deployment
          fetch-depth: 0
      - run: |
          echo "GIT_REPO=$(echo '${{ github.event.client_payload.repository }}' | rev | cut -d'/' -f1 | rev)" >> $GITHUB_ENV
          echo "GIT_BRANCH=$(echo '${{ github.event.client_payload.ref }}' | rev | cut -d'/' -f1 | rev)" >> $GITHUB_ENV
          GIT_FULL_SHA="${{ github.event.client_payload.sha }}"
          echo "GIT_SHA=${GIT_FULL_SHA:0:7}" >> $GITHUB_ENV
      - run: |
          echo "DOCKER_DOCKER_IMAGE=${{ env.GIT_REPO }}-${{ env.GIT_BRANCH }}" >> $GITHUB_ENV
      - run: |
          echo ${{ env.GIT_REPO }}
          echo ${{ env.GIT_BRANCH }}
          echo ${{ env.DOCKER_IMAGE }}
          echo ${{ env.GIT_SHA }}
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.client_payload.repository }}
          token: ${{ secrets.DODOCO_BOT_PAT }}
          ref: ${{ github.event.client_payload.ref }}
          fetch-depth: 0
          submodules: true
          path: ./${{ env.GIT_REPO }}
      - run: |
          exit 1

          if [[ "$(node -p '["dev", "prod"].includes("${{ env.GIT_BRANCH }}")')" == "false" ]]; then
              exit 1
          fi

          if [[ "$(node -p '["api-gateway", "nh", "hc", "konachan"].includes("${{ env.GIT_REPO }}")')" == "false" ]]; then
             exit 1
          fi
      - uses: docker/setup-buildx-action@v1
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker_meta
        with:
          images: ghcr.io/trifoliumproj/deployment/${{ env.DOCKER_IMAGE }}
          tag-sha: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: dodoco-bot
          password: ${{ secrets.DODOCO_BOT_PAT_GHCR }}
      - uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./${{ env.GIT_REPO }}
          file: ./deployment/dockerfiles/${{ env.GIT_REPO }}.Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
      - run: |
          cd ./deployment
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b deploy/${{ env.DOCKER_IMAGE }}
          echo ${{ steps.docker_build.outputs.digest }}
          cd ./hello-world/envs/${{ env.GIT_BRANCH }}/
          pwd
          kustomize edit set image ${{ env.GIT_REPO }}=ghcr.io/trifoliumproj/deployment/${{ env.DOCKER_IMAGE }}@${{ steps.docker_build.outputs.digest }}
          cat kustomization.yaml
          git add kustomization.yaml
          git commit -m 'deploy(${{ env.GIT_REPO }}): ${{ env.DOCKER_IMAGE }}@${{ steps.docker_build.outputs.digest }}'
      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.DODOCO_BOT_PAT }}
          branch: deploy/${{ env.DOCKER_IMAGE }}
          directory: "./deployment"
      - uses: repo-sync/pull-request@v2
        with:
          source_branch: deploy/${{ env.DOCKER_IMAGE }}
          destination_branch: "main"
          github_token: ${{ secrets.DODOCO_BOT_PAT }}
          pr_reviewer: "FleeingSunlight"
